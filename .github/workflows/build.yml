name: Build Ruby for GitHub Actions
on:
  push:
    paths-ignore:
    - README.md
jobs:
  # Build stable releases
  build:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-latest ]
        ruby: [ "truffleruby-20.1.0" ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set tag name
      id: info
      run: |
        tag=enable-shared
        echo "::set-output name=tag::$tag"
    - name: Check if already built
      run: '! curl -s --head --fail https://github.com/ruby/ruby-builder/releases/download/${{ steps.info.outputs.tag }}/${{ matrix.ruby }}-${{ matrix.os }}.tar.gz'

    - name: Clone ruby-install
      run: git clone https://github.com/postmodern/ruby-install.git
    - name: Install ruby-install
      run: sudo make install
      working-directory: ./ruby-install

    - name: List versions
      run: ruby-install

      # Install packages
    - run: sudo apt-get update
      if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.ruby, 'ruby-')
    - run: sudo apt-get install -y --no-install-recommends libyaml-dev libgdbm-dev libreadline-dev libncurses5-dev
      if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.ruby, 'ruby-')

    - name: Install system ruby for ruby-2.5.2
      run: sudo apt-get install -y --no-install-recommends ruby
      if: startsWith(matrix.os, 'ubuntu') && matrix.ruby == 'ruby-2.5.2'

    - name: Build Ruby
      run: ruby-install --no-install-deps -j4 ${{ matrix.ruby }} -- --enable-shared --disable-install-doc
      env:
        CPPFLAGS: "-DENABLE_PATH_CHECK=0" # https://github.com/actions/virtual-environments/issues/267
    - name: Create archive
      run: tar czf ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz -C ~/.rubies ${{ matrix.ruby }}
    - name: Install Bundler if needed
      run: |
        if [ ! -e ~/.rubies/${{ matrix.ruby }}/bin/bundle ]; then
          export PATH="$HOME/.rubies/${{ matrix.ruby }}/bin:$PATH"
          gem install bundler -v '~> 1' --no-document
        fi

    - run: echo "::add-path::$HOME/.rubies/${{ matrix.ruby }}/bin"
    - run: ruby --version
    - run: ruby -ropen-uri -e 'puts open("https://rubygems.org/") { |f| f.read(1024) }'
    - run: gem install json:2.2.0 --no-document
    - run: bundle --version
    - run: bundle install
    - run: bundle exec rake --version
    - run: ruby test_subprocess.rb

    - name: Upload Built Ruby
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # curl -s "https://api.github.com/repos/ruby/ruby-builder/releases/tags/$TAG" | jq -r .upload_url
        upload_url: 'https://uploads.github.com/repos/ruby/ruby-builder/releases/25022539/assets{?name,label}'
        asset_path: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_name: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/gzip

  buildJRubyWindows:
    if: false
    strategy:
      fail-fast: false
      matrix:
        include:
        - { os: windows-latest, jruby-version: 9.1.17.0, ruby: jruby-9.1.17.0 }
        - { os: windows-latest, jruby-version: 9.2.9.0,  ruby: jruby-9.2.9.0 }
        - { os: windows-latest, jruby-version: 9.2.10.0, ruby: jruby-9.2.10.0 }
        - { os: windows-latest, jruby-version: 9.2.11.0, ruby: jruby-9.2.11.0 }
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set tag name
      id: info
      run: |
        tag=enable-shared
        echo "::set-output name=tag::$tag"
      shell: bash
    - name: Check if already built
      run: '! curl -s --head --fail https://github.com/ruby/ruby-builder/releases/download/${{ steps.info.outputs.tag }}/${{ matrix.ruby }}-${{ matrix.os }}.tar.gz'
      shell: bash

    - run: curl --fail -L -O 'https://repo1.maven.org/maven2/org/jruby/jruby-dist/${{ matrix.jruby-version }}/jruby-dist-${{ matrix.jruby-version }}-bin.tar.gz'
      shell: bash
    - name: Build JRuby
      shell: bash
      run: |
        mkdir ~/.rubies
        tar xf jruby-dist-${{ matrix.jruby-version }}-bin.tar.gz -C ~/.rubies
        cd ~/.rubies/${{ matrix.ruby }}/bin
        # Copy bash launcher, so 'ruby' works in bash
        cp jruby ruby
        # Create ruby.bat, so 'ruby' works in pwsh
        echo -en "@ECHO OFF\r\n@\"%~dp0jruby.exe\" %*\r\n" > ruby.bat
    - name: Create archive
      run: tar czf ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz -C ~/.rubies ${{ matrix.ruby }}
      shell: bash
    - name: Install Bundler if needed
      shell: bash
      run: |
        if [ ! -e ~/.rubies/${{ matrix.ruby }}/bin/bundle ]; then
          export PATH="$HOME/.rubies/${{ matrix.ruby }}/bin:$PATH"
          gem install bundler -v '~> 1' --no-document
        fi

    - run: echo "::add-path::$Env:UserProfile\.rubies\${{ matrix.ruby }}\bin"
    - run: echo $Env:PATH

    - run: ruby --version
    - run: ruby -ropen-uri -e 'puts open(%{https://rubygems.org/}) { |f| f.read(1024) }'
    - run: gem install json:2.2.0 --no-document
    - run: bundle --version
    - run: bundle install
    - run: bundle exec rake --version

    - run: ruby --version
      shell: bash
    - run: ruby -ropen-uri -e 'puts open(%{https://rubygems.org/}) { |f| f.read(1024) }'
      shell: bash
    - run: gem install json:2.2.0 --no-document
      shell: bash
    - run: bundle --version
      shell: bash
    - run: bundle install
      shell: bash
    - run: bundle exec rake --version
      shell: bash

    - name: Upload Built Ruby
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # curl -s "https://api.github.com/repos/ruby/ruby-builder/releases/tags/$TAG" | jq -r .upload_url
        upload_url: 'https://uploads.github.com/repos/ruby/ruby-builder/releases/25022539/assets{?name,label}'
        asset_path: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_name: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/gzip

  # Ruby <= 2.3 needs OpenSSL 1.0.2 which cannot be installed on Ubuntu 16.04 and macos-latest.
  # To workaround that, we use ruby-build which builds its own OpenSSL.
  build23:
    if: false
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-16.04, ubuntu-18.04, macos-latest ]
        ruby-version: [ "2.3.0", "2.3.1", "2.3.2", "2.3.3", "2.3.4", "2.3.5", "2.3.6", "2.3.7", "2.3.8" ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set tag name
      id: info
      run: |
        tag=enable-shared
        echo "::set-output name=tag::$tag"
    - name: Check if already built
      run: '! curl -s --head --fail https://github.com/ruby/ruby-builder/releases/download/${{ steps.info.outputs.tag }}/ruby-${{ matrix.ruby-version }}-${{ matrix.os }}.tar.gz'

    - name: Clone ruby-build
      run: git clone --branch ruby23-openssl-linux https://github.com/eregon/ruby-build.git
    - name: Install ruby-build
      run: sudo ./ruby-build/install.sh

    - name: List versions
      run: ruby-build --definitions

      # Install packages
    - run: sudo apt-get update
      if: startsWith(matrix.os, 'ubuntu')
    - run: sudo apt-get install -y --no-install-recommends libyaml-dev libgdbm-dev libreadline-dev libncurses5-dev
      if: startsWith(matrix.os, 'ubuntu')

    - name: Build Ruby
      run: ruby-build --verbose ${{ matrix.ruby-version }} $HOME/.rubies/ruby-${{ matrix.ruby-version }}
      env:
        RUBY_CONFIGURE_OPTS: --enable-shared --disable-install-doc
        CPPFLAGS: "-DENABLE_PATH_CHECK=0" # https://github.com/actions/virtual-environments/issues/267
    - name: Create archive
      run: tar czf ruby-${{ matrix.ruby-version }}-${{ matrix.os }}.tar.gz -C ~/.rubies ruby-${{ matrix.ruby-version }}
    - name: Install Bundler if needed
      run: |
        if [ ! -e ~/.rubies/ruby-${{ matrix.ruby-version }}/bin/bundle ]; then
          export PATH="$HOME/.rubies/ruby-${{ matrix.ruby-version }}/bin:$PATH"
          gem install bundler -v '~> 1' --no-document
        fi

    - run: echo "::add-path::$HOME/.rubies/ruby-${{ matrix.ruby-version }}/bin"
    - run: ruby --version
    - run: ruby -ropen-uri -e 'puts open("https://rubygems.org/") { |f| f.read(1024) }'
    - run: gem install json:2.2.0 --no-document
    - run: bundle --version
    - run: bundle install
    - run: bundle exec rake --version
    - run: ruby test_subprocess.rb

    - name: Upload Built Ruby
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # curl -s "https://api.github.com/repos/ruby/ruby-builder/releases/tags/$TAG" | jq -r .upload_url
        upload_url: 'https://uploads.github.com/repos/ruby/ruby-builder/releases/25022539/assets{?name,label}'
        asset_path: ruby-${{ matrix.ruby-version }}-${{ matrix.os }}.tar.gz
        asset_name: ruby-${{ matrix.ruby-version }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/gzip

  buildRubinius:
    if: false
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-16.04, ubuntu-18.04, macos-latest ]
        ruby: [ rubinius-4.14 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set tag name
      id: info
      run: |
        tag=enable-shared
        echo "::set-output name=tag::$tag"
    - name: Check if already built
      run: '! curl -s --head --fail https://github.com/ruby/ruby-builder/releases/download/${{ steps.info.outputs.tag }}/${{ matrix.ruby }}-${{ matrix.os }}.tar.gz'

    # Install packages
    - run: sudo apt-get update
      if: startsWith(matrix.os, 'ubuntu')
    - run: sudo apt-get install ruby clang llvm
      if: startsWith(matrix.os, 'ubuntu')
    - run: brew install llvm
      if: matrix.os == 'macos-latest'

    - run: wget 'http://releases.rubinius.com/${{ matrix.ruby }}.tar.bz2'
    - run: tar xf ${{ matrix.ruby }}.tar.bz2
    - name: Build Rubinius
      run: |
        cd ${{ matrix.ruby }}
        ./configure --prefix=$HOME/.rubies/${{ matrix.ruby }}
        make
        make install
    - name: Create archive
      run: tar czf ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz -C ~/.rubies ${{ matrix.ruby }}

    - run: echo "::add-path::$HOME/.rubies/${{ matrix.ruby }}/bin"
    - run: echo "::add-path::$HOME/.rubies/${{ matrix.ruby }}/gems/bin"
    - run: ruby --version
    - run: ruby -ropen-uri -e 'puts open("https://rubygems.org/") { |f| f.read(1024) }'
    - run: gem install json:2.2.0 --no-document
    - run: bundle --version
    - run: bundle install
    - run: bundle exec rake --version

    - name: Upload Built Ruby
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # curl -s "https://api.github.com/repos/ruby/ruby-builder/releases/tags/$TAG" | jq -r .upload_url
        upload_url: 'https://uploads.github.com/repos/ruby/ruby-builder/releases/25022539/assets{?name,label}'
        asset_path: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_name: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/gzip
